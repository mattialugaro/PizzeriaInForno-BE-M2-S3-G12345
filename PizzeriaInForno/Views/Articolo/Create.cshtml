@model PizzeriaInForno.Models.Articolo

@{
    ViewBag.Title = "Create";
}

<h2>Create</h2>

@*using (Html.BeginForm("Details", "Home", new { productId = Model.IdScarpa }, FormMethod.Post, new { enctype = "multipart/form-data" }))

var fileName = Path.GetFileName(ImmagineCopertina.FileName);
                var path = Path.Combine("~/Content/Img", fileName);
                var absolutePath = Server.MapPath(path);
                ImmagineCopertina.SaveAs(absolutePath);

HttpPostedFileBase ImmagineCopertina come parametro

if (Foto != null && Foto.ContentLength > 0)
{
    string nomeFile = Path.GetFileName(Foto.FileName);
    string pathToSave = Path.Combine(Server.MapPath("~/ImmaginiProdotto"), nomeFile);
    Foto.SaveAs(pathToSave);
    prodotto.Foto = "/ImmaginiProdotto/" + nomeFile; // Imposta l'URL dell'immagine
}
if (ModelState.IsValid)
{
    db.Prodotto.Add(prodotto);
    db.SaveChanges();
    return RedirectToAction("Index");
}
return View(prodotto);*@

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        <h4>Articolo</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        <div class="form-group">
            @Html.LabelFor(model => model.Nome, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Nome, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Nome, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Foto, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Foto, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Foto, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Prezzo, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Prezzo, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Prezzo, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.TempoConsegna, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.TempoConsegna, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.TempoConsegna, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => Model.IngredientiSelezionati, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                <select id="ingredientiMultiSelect" name="IngredientiSelezionati" multiple="multiple">
                    @foreach (var ingrediente in Model.IngredientiTendina)
                    {
                        <option value="@ingrediente.IDIngredient">@ingrediente.Nome</option>
                    }
                </select>
                @Html.ValidationMessageFor(model => Model.IngredientiSelezionati, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Create" class="btn btn-default" />
            </div>
        </div>
    </div>
}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
